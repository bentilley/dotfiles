# javascript file snippets

# these functions are imported from the /pythonx dir in /.vim
global !p
from snippets.javascript import generate_constructor
endglobal

# UTILS

snippet lg "Console logging" b
console.log($1);
endsnippet

snippet vlg "Console logging a variable" b
console.log("$1: ", $1);
endsnippet

snippet olg "Console logging many variables" b
console.log({$1});
endsnippet

snippet elg "Console error" b
console.error($0);
endsnippet

# LANGUAGE

snippet nf "Named function definition" b
function $1($2) {
  $0
}
endsnippet

snippet mf "Class Method Function" b
$1($2) {$0}
endsnippet

snippet imp "Import statement" b
import $1 from '$2';
endsnippet

snippet cls "ES6 class definition with constructor" b
class $1`!p snip.rv = " extends " if t[2] else ""`$2 {
  constructor($3) {
    `!p snip.rv = generate_constructor(t[2], t[3])`
  }
  $0
}
endsnippet

snippet swt "Switch statement" b
switch ($1) {
case $2:
  break;
default:
  $0
}
endsnippet

snippet npr "New promise" w
new Promise((resolve, reject) => {$0});
endsnippet

snippet thn ".then a promise" i
then(res => {$1}, err => {${2:console.log(err);}})$0
endsnippet

# TESTING

snippet jdes "jest describe block" b
describe("$1", () => {$2});
endsnippet

snippet jit "jest it block" b
it("$1", () => {$2});
endsnippet

snippet jbe "jest before each" b
beforeEach(() => {
  $0
});
endsnippet

snippet jba "jest before all" b
beforeAll(() => {
  $0
});
endsnippet

snippet jex "jest expect" b
expect($1)$0;
endsnippet
