# vim:set foldmethod=marker:

# tigrc

# Options {{{

set main-options = -n 1000 # useful for large repos
set horizontal-scroll = 33%
set line-graphics = utf-8
set commit-order = default
set log-options = --show-signature
set diff-options = --show-signature

# }}}
# Views {{{

set blame-view	= date:default author:full file-name:auto id:yes,color line-number:no,interval=5 text
set grep-view	= file-name:no line-number:yes,interval=1 text
set main-view	= line-number:no,interval=5 id:yes date:relative author:full commit-title:yes,graph,refs,overflow=no
set refs-view	= date:default author:full ref commit-title
set stash-view	= line-number:no,interval=5 id:no date:default author:full commit-title
set status-view	= line-number:no,interval=5 status:short file-name
set tree-view	= line-number:no,interval=5 mode author:full file-size date:default id:no file-name

# }}}
# Colors {{{

color cursor black green
color status white default
color title-focus black magenta
# color title-blur white default
# color date yellow default
# color author red default bold
color main-head red default bold
color main-tag magenta default
# color stat-staged green default
# color stat-unstaged red default
# color stat-untracked yellow default
# color tree.header white default
# color tree.directory cyan default

# }}}
# Bindings {{{

# Generic {{{

# resets
bind generic <Hash> none
bind generic $      none
bind generic %      none
bind generic A      none
bind generic D      none
bind generic I      none
bind generic L      none
bind generic S      none
bind generic W      none
bind generic X      none
bind generic [      none
bind generic ]      none
bind generic ^      none
bind generic b      none
bind generic d      none
bind generic f      none
bind generic g      none
bind generic i      none
bind generic m      none
bind generic p      none
bind generic r      none
bind generic s      none
bind generic t      none
bind generic v      none
bind generic y      none
bind generic ~      none

# view switching
bind generic vm view-main
bind generic vd view-diff
bind generic vl view-log
bind generic vL view-reflog
bind generic vt view-tree
bind generic vx view-blob
bind generic vb view-blame
bind generic vr view-refs
bind generic vs view-status
bind generic vu view-stage
bind generic vy view-stash
bind generic vg view-grep
bind generic vp view-pager
bind generic vh view-help

# view manipulation
bind generic <C-r> refresh

# cursor navigation
bind generic j move-down
bind generic k move-up
bind generic <C-f> move-page-down
bind generic <C-b> move-page-up
bind generic [m move-prev-merge
bind generic ]m move-next-merge
bind generic gg move-first-line
bind generic G  move-last-line

# scrolling
bind generic h scroll-left
bind generic l scroll-right
bind generic ^ scroll-first-col

# view navigation
bind generic [c :toggle diff-context -1
bind generic ]c :toggle diff-context +1
bind generic [C :toggle diff-context -5
bind generic ]C :toggle diff-context +5

# option toggling
bind generic yF :toggle file-filter
bind generic yG :toggle commit-title-graph
bind generic yR :toggle rev-filter
bind generic ya :toggle author
bind generic yd :toggle date
bind generic yf :toggle file-name
bind generic yg :toggle line-graphics
bind generic yi :toggle id
bind generic yn :toggle line-number
bind generic yo :toggle sort-order
bind generic yp :toggle ignore-space
bind generic yr :toggle commit-title-refs
bind generic ys :toggle sort-field
bind generic yt :toggle commit-title-overflow

# external commands
bind generic F !git fetch --all --prune --jobs=10
bind generic P ?>git push --force-with-lease
bind generic c !git commit --verbose
bind generic p >git push
bind generic X ?>git prune

# utils
bind generic yy !@sh -c "printf %(commit) | cb"

# }}}
# Main {{{

# resets
bind main F !>git fetch --all --prune --jobs=10

# cursor navigation
bind main G move-last-line

# git commands
bind main ! !git revert %(commit)
bind main A @git commit --amend --reuse-message=HEAD --no-edit
bind main B @?git branch -f %(prompt) %(commit)
bind main C !?git checkout %(commit)
bind main F !>git absorb --autosquash %(commit)
bind main H !?git reset --hard %(commit)
bind main R !git rebase -i --autosquash %(commit)^
bind main V !>sh -c "$EDITOR $(git show %(commit) --pretty=format: --name-only | xargs)" # edit all files changed by commit
bind main a !?git commit --amend
bind main b @?git branch %(prompt) %(commit)
bind main f @git commit --fixup %(commit)
bind main x !git cherry-pick %(commit)

# old
# bind diff A !git add %(file)              # Add current file
# bind diff F !@sh -c "git show %(commit) --pretty=format: --name-only | xargs | xsel -ib"
# bind diff P !git add -p %(file)           # Partially add current file
# bind main E !<sh -c "$EDITOR -c 'Gedit %(commit)' $(ls | head -1)"

# }}}
# Diff {{{

# resets
bind diff [ none
bind diff ] none

# }}}
# Tree {{{

# edit this file as is now
bind tree E !>sh -c "$EDITOR %(file)"

# }}}
# Refs {{{

bind refs N !@git branch %(prompt)
bind refs R !@git rebase

bind refs ! ?@git branch -D %(branch)

bind refs d none
bind refs dd !@git branch -D %(branch)

bind refs g none
bind refs gc !@git checkout %(ref)

# }}}
# Status {{{

# external commands
bind status D !>rm -i %(file)
bind status U @git add --all      # Add all files
bind status i !git add -N %(file) # Add file to index with no content
bind status d !>git difftool %(file)

# }}}
# Stage {{{

# resets
bind stage \ none

# view-specific bindings
bind stage s stage-split-chunk

# }}}
# Stash {{{

# resets
bind stash A none
bind stash P none

# external commands
bind stash a ?git stash apply %(stash)
bind stash p ?git stash pop %(stash)
bind stash s @?git stash --all

# }}}

# }}}
