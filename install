#!/usr/bin/env bash

source setup_lib.bash

CONFIG_DIR="$HOME/.config"

main() {
  printf "Hello Ben. Let's sync your dotfiles :)\n\n"
  symlinking_config_files
  check_third_party_tools
  create_directories
  update_global_npm_packages
}

symlinking_config_files() {
  printf "symlinking config files...\n"

  # ALACRITTY
  dotfile_link "alacritty/alacritty.yml" "$CONFIG_DIR/alacritty/alacritty.yml"

  # CTAGS
  dotfile_link "ctags" "$HOME/.ctags.d"

  # DELVE
  dotfile_link "dlv/config.yml" "$HOME/.dlv/config.yml"

  # GIT
  dotfile_link "git/gitignore.global" "$CONFIG_DIR/.gitignore"
  dotfile_link "git/gitconfig" "$HOME/.gitconfig"

  # GLOW
  dotfile_link "glow/glow.yml" "$CONFIG_DIR/glow/glow.yml"

  # GRC - Generic Colouriser
  dotfile_link "grc/.grc" "$HOME/.grc"

  # GRIP
  dotfile_link "grip" "$HOME/.grip"

  # IMAPFILTER
  dotfile_link "imapfilter/.imapfilter" "$HOME/.imapfilter"

  # LAZY DOCKER
  dotfile_link "lazydocker/config.yaml" "$CONFIG_DIR/lazydocker/config.yml"

  # LF
  dotfile_link "lf/lfrc" "$CONFIG_DIR/lf/lfrc"

  # OFFLINEIMAP
  dotfile_link "offlineimap/.offlineimaprc" "$HOME/.offlineimaprc"

  # MUTT
  dotfile_link "mutt/.mutt" "$HOME/.mutt"

  # NEOVIM
  dotfile_link "nvim/config" "$CONFIG_DIR/nvim"

  # PDB
  dotfile_link "pdb/.pdbrc" "$HOME/.pdbrc"

  # PDB
  dotfile_link "pgcli/config" "$CONFIG_DIR/pgcli"

  # R
  dotfile_link "R/.Rprofile" "$HOME/.Rprofile"

  # STARSHIP
  dotfile_link "starship/starship.toml" "$CONFIG_DIR/starship.toml"

  # TASKWARRIOR
  dotfile_link "taskwarrior/.taskrc" "$HOME/.taskrc"

  # TIG
  dotfile_link "tig/tigrc" "$HOME/.tigrc"

  # TMUX
  dotfile_link "tmux/.tmux.conf" "$HOME/.tmux.conf"
  git_install "tmux-plugins/tpm" "$CONFIG_DIR/tmux/plugins/tpm" "tmux plugin manager"

  # WTFUTIL
  dotfile_link "wtfutil/config.yml" "$CONFIG_DIR/wtf/config.yml"

  # ZSH
  dotfile_link "zsh/.zshenv_wrapper" "$HOME/.zshenv"
  dotfile_link "zsh/.zshenv" "$CONFIG_DIR/zsh/.zshenv"
  dotfile_link "zsh/.zshrc" "$CONFIG_DIR/zsh/.zshrc"
  dotfile_link "zsh/.zprofile" "$CONFIG_DIR/zsh/.zprofile"

  # TODO set up symlinking for useful scripts to ~/.local/bin

  printf "symlinking complete!\n\n"
}

check_third_party_tools() {
  printf "checking third party tools...\n"

  # ZINIT
  if [ ! -d "$HOME/.local/share/zinit" ]; then
    sh -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"
  fi

  if [ ! -f "/usr/local/bin/glab" ]; then
    install_glab
  fi

  if [[ "$(uname)" == "Darwin" ]]; then
    printf "Running Mac brew installs...\n"
    brew_install ag the_silver_searcher
    brew_install autojump autojump
    brew_install bat bat
    brew_install ctags universal-ctags
    brew_install delta git-delta
    brew_install exa exa
    brew_install ffmpeg ffmpeg
    brew_install fswatch fswatch
    brew_install fzf fzf
    # brew_install gdb gdb
    brew_install glow glow
    brew_install gpg gnupg
    brew_install grip grip
    brew_install htop htop
    brew_install hub hub
    brew_install hugo hugo
    brew_install imapfilter imapfilter
    brew_install jc jc
    brew_install jq jq
    brew_install lf lf
    brew_install lynx lynx
    brew_install moreutils moreutils
    brew_install navi navi
    brew_install nvim nvim
    brew_install octave octave
    brew_install offlineimap offlineimap
    brew_install pandoc pandoc
    brew_install plantuml plantuml
    brew_install rg ripgrep
    brew_install starship starship
    brew_install stow stow
    brew_install shellcheck shellcheck
    brew_install shfmt shfmt
    brew_install tig tig
    brew_install tmux tmux
    brew_install urlview urlview
    brew_install vim "vim --HEAD"
    brew_install watchman watchman
    brew_install wtfutil wtfutil

    brew tap homebrew/cask-fonts
    brew install --cask font-meslo-lg-nerd-font
  fi

  # TODO make a function for brew cask installs
  #  - Alacritty
  #  - Amethyst

  printf "third party tool check complete!\n\n"
}

create_directories() {
  test_and_mkdir ~/.cache/mutt mutt          # mutt cache
  test_and_mkdir ~/.task taskwarrior         # taskwarrior data
  test_and_mkdir "$CONFIG_DIR/vim/views" vim # vim view data
}

main
